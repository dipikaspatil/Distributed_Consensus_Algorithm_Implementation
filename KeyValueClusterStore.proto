syntax = "proto3";

message SetupConnection {

    message Cluster {
        string name = 1;
        string ip = 2;
        uint32 port = 3;
    }

    repeated Cluster all_clusters = 2;
}

message StartElection {
    string src = 1;
    uint32 term = 2;
}

message RequestVote {
    uint32 term = 1;
    string clusterName = 2;
    string clusterIp = 3;
    uint32 clusterPort = 4;
}

message ResponseVote {
    uint32 term = 1;
    string voteStatus = 2;
    string clusterName = 3;
}

message HeartBeatMessage {
    uint32 term = 1;
    string clusterName = 2;
    string leaderIp = 3;
    uint32 leaderPort = 4;

    message append_entry {
        uint32 transId = 1;
        uint32 key = 2;
        string value = 3;
        uint32 term = 4;
        int32 indx = 5;
    }

    append_entry entry = 5;
    string msgType = 6;
    string clientIp = 7;
    uint32 clinetPort = 8;
    string isLastEntryCommited = 9;
}

message ClientRequest {
    uint32 transId = 1;
    string request_type = 2;

    message GetRequest {
        uint32 key = 1;
    }

    message PutRequest {
        uint32 key = 1;
        string value = 2;
    }

    GetRequest get_request = 3;
    PutRequest put_request = 4;
    string clientIp = 5;
    uint32 clientPort = 6;
}

message LeaderResponse {
    uint32 transId = 1;
    uint32 key = 2;
    string value = 3;
    string message = 4;
    string request_type = 5;
}

message AppendEntryResponse {
    uint32 transId = 1;
    uint32 key = 2;
    string value = 3;
    string message = 4;
    string request_type = 5;
    int32 indx = 6;
    string clusterNodeIp = 7;
    uint32 clusterNodePort = 8;
    string clusterNodeName = 9;
    string clientIp = 10;
    uint32 clientPort = 11;
}

message CommitEntry {
    uint32 key = 1;
    string value = 2;
}

message LogRepair {
    message LogEntry {
        uint32 transId = 1;
        uint32 key = 2;
        string value = 3;
        uint32 term = 4;
        int32 indx = 5;
    }

    repeated LogEntry entry = 1;

    string leaderIp = 2;
    uint32 leaderPort = 3;
    string clusterNodeIp = 4;
    uint32 clusterNodePort = 5;
}

message LogRepairResponse {
    string repairResponse = 1;
    int32 indx = 2;
    string leaderIp = 3;
    uint32 leaderPort = 4;
    string clusterNodeIp = 5;
    uint32 clusterNodePort = 6;
}

message KeyValueMessage {
    oneof key_value_message {
        SetupConnection setup_connection = 1;
        StartElection start_election = 2;
        RequestVote request_vote = 3;
        ResponseVote response_vote = 4;
        HeartBeatMessage heartbeat_message = 5;
        ClientRequest client_request = 6;
        LeaderResponse leader_response = 7;
        AppendEntryResponse append_entry_response = 8;
        CommitEntry commit_entry = 9;
        LogRepair log_repair = 10;
        LogRepairResponse log_repair_response = 11;
    }
}
